Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
tpi_dly_cnt         0x2               tpi.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
sck_spsr            0x1               isp.o
ispTransmit         0x2               isp.o
sck_spcr            0x1               isp.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
isp_hiaddr          0x1               isp.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o
sck_sw_delay        0x1               isp.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD isp.o
LOAD clock.o
LOAD tpi.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x11c2
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000034       0x52 usbdrv/usbdrv.o
                0x0000000000000034                usbDescriptorConfiguration
                0x0000000000000046                usbDescriptorDevice
                0x0000000000000058                usbDescriptorStringDevice
                0x0000000000000066                usbDescriptorStringVendor
                0x0000000000000082                usbDescriptorString0
                0x0000000000000086                . = ALIGN (0x2)
                0x0000000000000086                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000086        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000086                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000086                __ctors_start = .
 *(.ctors)
                0x0000000000000086                __ctors_end = .
                0x0000000000000086                __dtors_start = .
 *(.dtors)
                0x0000000000000086                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000086        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o
                0x0000000000000086                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000086        0xc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000092       0x16 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
                0x0000000000000092                __do_copy_data
 .init4         0x00000000000000a8       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000a8                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000b8        0x4 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o
 *(.init9)
 *(.text)
 .text          0x00000000000000bc        0x2 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o
                0x00000000000000bc                __vector_22
                0x00000000000000bc                __vector_24
                0x00000000000000bc                __vector_12
                0x00000000000000bc                __bad_interrupt
                0x00000000000000bc                __vector_6
                0x00000000000000bc                __vector_3
                0x00000000000000bc                __vector_23
                0x00000000000000bc                __vector_25
                0x00000000000000bc                __vector_11
                0x00000000000000bc                __vector_13
                0x00000000000000bc                __vector_17
                0x00000000000000bc                __vector_19
                0x00000000000000bc                __vector_7
                0x00000000000000bc                __vector_5
                0x00000000000000bc                __vector_4
                0x00000000000000bc                __vector_9
                0x00000000000000bc                __vector_2
                0x00000000000000bc                __vector_21
                0x00000000000000bc                __vector_15
                0x00000000000000bc                __vector_8
                0x00000000000000bc                __vector_14
                0x00000000000000bc                __vector_10
                0x00000000000000bc                __vector_16
                0x00000000000000bc                __vector_18
                0x00000000000000bc                __vector_20
 .text          0x00000000000000be      0x260 usbdrv/usbdrv.o
                0x00000000000000be                usbPoll
                0x0000000000000310                usbInit
 .text          0x000000000000031e      0x28c usbdrv/usbdrvasm.o
                0x000000000000031e                usbCrc16
                0x0000000000000348                usbCrc16Append
                0x0000000000000350                __vector_1
 .text          0x00000000000005aa        0x0 usbdrv/oddebug.o
 .text          0x00000000000005aa      0x4e6 isp.o
                0x00000000000005aa                ispTransmit_sw
                0x00000000000005e8                ispTransmit_hw
                0x0000000000000642                spiHWenable
                0x0000000000000650                ispSetSCKOption
                0x0000000000000710                ispDelay
                0x0000000000000720                ispConnect
                0x0000000000000770                ispDisconnect
                0x0000000000000780                ispEnterProgrammingMode
                0x000000000000081c                ispReadFlash
                0x0000000000000886                ispWriteFlash
                0x0000000000000940                ispFlushPage
                0x00000000000009ee                ispReadEEPROM
                0x0000000000000a38                ispWriteEEPROM
 .text          0x0000000000000a90       0x18 clock.o
                0x0000000000000a90                clockWait
 .text          0x0000000000000aa8       0xd2 tpi.o
                0x0000000000000aa8                tpi_init
                0x0000000000000ac8                tpi_send_byte
                0x0000000000000b0e                tpi_recv_byte
                0x0000000000000b40                tpi_read_block
                0x0000000000000b54                tpi_write_block
 .text          0x0000000000000b7a      0x624 main.o
                0x0000000000000b7a                usbFunctionSetup
                0x0000000000000ef8                usbFunctionRead
                0x0000000000000ff4                usbFunctionWrite
 .text          0x000000000000119e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x000000000000119e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000119e        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x000000000000119e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000119e       0x20 main.o
                0x000000000000119e                main
 .text.libgcc.mul
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000011be                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000011be        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x00000000000011be                exit
                0x00000000000011be                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000011be        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000011c2                _etext = .

.data           0x0000000000800100        0x2 load address 0x00000000000011c2
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o
 .data          0x0000000000800100        0x2 usbdrv/usbdrv.o
                0x0000000000800101                usbTxLen
 .data          0x0000000000800102        0x0 usbdrv/usbdrvasm.o
 .data          0x0000000000800102        0x0 usbdrv/oddebug.o
 .data          0x0000000000800102        0x0 isp.o
 .data          0x0000000000800102        0x0 clock.o
 .data          0x0000000000800102        0x0 tpi.o
 .data          0x0000000000800102        0x0 main.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x48
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o
 .bss           0x0000000000800102        0x1 usbdrv/usbdrv.o
 .bss           0x0000000000800103        0x0 usbdrv/usbdrvasm.o
 .bss           0x0000000000800103        0x0 usbdrv/oddebug.o
 .bss           0x0000000000800103        0x0 isp.o
 .bss           0x0000000000800103        0x0 clock.o
 .bss           0x0000000000800103        0x0 tpi.o
 .bss           0x0000000000800103       0x15 main.o
 .bss           0x0000000000800118        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800118        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800118        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800118       0x2a usbdrv/usbdrv.o
                0x0000000000800118                usbTxBuf
                0x0000000000800123                usbDeviceAddr
                0x0000000000800124                usbRxToken
                0x0000000000800125                usbInputBufOffset
                0x0000000000800126                usbMsgPtr
                0x0000000000800128                usbRxLen
                0x0000000000800129                usbNewDeviceAddr
                0x000000000080012a                usbCurrentTok
                0x000000000080012b                usbConfiguration
                0x000000000080012c                usbRxBuf
 COMMON         0x0000000000800142        0x6 isp.o
                0x0000000000800142                sck_spsr
                0x0000000000800143                ispTransmit
                0x0000000000800145                sck_spcr
                0x0000000000800146                isp_hiaddr
                0x0000000000800147                sck_sw_delay
 COMMON         0x0000000000800148        0x2 tpi.o
                0x0000000000800148                tpi_dly_cnt
                0x000000000080014a                PROVIDE (__bss_end, .)
                0x00000000000011c2                __data_load_start = LOADADDR (.data)
                0x00000000000011c4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080014a        0x0
                0x000000000080014a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080014a                PROVIDE (__noinit_end, .)
                0x000000000080014a                _end = .
                0x000000000080014a                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.8.2/../../../avr/lib/avr4/crtm88.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 usbdrv/usbdrv.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 usbdrv/oddebug.o
 .comment       0x0000000000000000       0x12 isp.o
 .comment       0x0000000000000000       0x12 clock.o
 .comment       0x0000000000000000       0x12 main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
